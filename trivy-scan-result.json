{
  "SchemaVersion": 2,
  "CreatedAt": "2025-06-10T21:02:58.537905+08:00",
  "ArtifactName": ".",
  "ArtifactType": "repository",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-45337",
          "PkgID": "golang.org/x/crypto@v0.18.0",
          "PkgName": "golang.org/x/crypto",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/crypto@v0.18.0",
            "UID": "fd38dee066eb4fe9"
          },
          "InstalledVersion": "v0.18.0",
          "FixedVersion": "0.31.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45337",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/crypto/ssh: Misuse of ServerConfig.PublicKeyCallback may cause authorization bypass in golang.org/x/crypto",
          "Description": "Applications and libraries which misuse connection.serverAuthenticate (via callback field ServerConfig.PublicKeyCallback) may be susceptible to an authorization bypass. The documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth. Users should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
          "Severity": "CRITICAL",
          "VendorSeverity": {
            "amazon": 3,
            "azure": 4,
            "cbl-mariner": 4,
            "ghsa": 4,
            "redhat": 3
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
              "V3Score": 9.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N",
              "V3Score": 8.2
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2024/12/11/2",
            "https://access.redhat.com/security/cve/CVE-2024-45337",
            "https://github.com/golang/crypto",
            "https://github.com/golang/crypto/commit/b4f1988a35dee11ec3e05d6bf3e90b695fbd8909",
            "https://go.dev/cl/635315",
            "https://go.dev/issue/70779",
            "https://groups.google.com/g/golang-announce/c/-nPEi39gI4Q/m/cGVPJCqdAQAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45337",
            "https://pkg.go.dev/vuln/GO-2024-3321",
            "https://security.netapp.com/advisory/ntap-20250131-0007",
            "https://security.netapp.com/advisory/ntap-20250131-0007/",
            "https://www.cve.org/CVERecord?id=CVE-2024-45337"
          ],
          "PublishedDate": "2024-12-12T02:02:07.97Z",
          "LastModifiedDate": "2025-02-18T21:15:22.187Z"
        },
        {
          "VulnerabilityID": "CVE-2025-22869",
          "PkgID": "golang.org/x/crypto@v0.18.0",
          "PkgName": "golang.org/x/crypto",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/crypto@v0.18.0",
            "UID": "fd38dee066eb4fe9"
          },
          "InstalledVersion": "v0.18.0",
          "FixedVersion": "0.35.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2025-22869",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/crypto/ssh: Denial of Service in the Key Exchange of golang.org/x/crypto/ssh",
          "Description": "SSH servers which implement file transfer protocols are vulnerable to a denial of service attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-770"
          ],
          "VendorSeverity": {
            "alma": 3,
            "amazon": 3,
            "azure": 3,
            "cbl-mariner": 3,
            "ghsa": 3,
            "oracle-oval": 3,
            "redhat": 3
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/errata/RHSA-2025:3833",
            "https://access.redhat.com/security/cve/CVE-2025-22869",
            "https://bugzilla.redhat.com/2348367",
            "https://errata.almalinux.org/9/ALSA-2025-3833.html",
            "https://github.com/golang/crypto",
            "https://github.com/golang/crypto/commit/7292932d45d55c7199324ab0027cc86e8198aa22",
            "https://go-review.googlesource.com/c/crypto/+/652135",
            "https://go.dev/cl/652135",
            "https://go.dev/issue/71931",
            "https://linux.oracle.com/cve/CVE-2025-22869.html",
            "https://linux.oracle.com/errata/ELSA-2025-7416.html",
            "https://nvd.nist.gov/vuln/detail/CVE-2025-22869",
            "https://pkg.go.dev/vuln/GO-2025-3487",
            "https://security.netapp.com/advisory/ntap-20250411-0010",
            "https://security.netapp.com/advisory/ntap-20250411-0010/",
            "https://www.cve.org/CVERecord?id=CVE-2025-22869"
          ],
          "PublishedDate": "2025-02-26T08:14:24.997Z",
          "LastModifiedDate": "2025-05-01T19:28:20.74Z"
        },
        {
          "VulnerabilityID": "CVE-2023-45288",
          "PkgID": "golang.org/x/net@v0.20.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.20.0",
            "UID": "8ead662c2e13b751"
          },
          "InstalledVersion": "v0.20.0",
          "FixedVersion": "0.23.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-45288",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang: net/http, x/net/http2: unlimited number of CONTINUATION frames causes DoS",
          "Description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
          "Severity": "MEDIUM",
          "VendorSeverity": {
            "alma": 3,
            "amazon": 2,
            "azure": 3,
            "bitnami": 3,
            "cbl-mariner": 3,
            "ghsa": 2,
            "oracle-oval": 3,
            "photon": 3,
            "redhat": 3,
            "rocky": 3,
            "ubuntu": 2
          },
          "CVSS": {
            "bitnami": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 5.3
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2024/04/03/16",
            "http://www.openwall.com/lists/oss-security/2024/04/05/4",
            "https://access.redhat.com/errata/RHSA-2024:2724",
            "https://access.redhat.com/security/cve/CVE-2023-45288",
            "https://bugzilla.redhat.com/2268017",
            "https://bugzilla.redhat.com/2268018",
            "https://bugzilla.redhat.com/2268019",
            "https://bugzilla.redhat.com/2268273",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2268017",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2268018",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2268019",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2268273",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-45288",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-45289",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-45290",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24783",
            "https://errata.almalinux.org/9/ALSA-2024-2724.html",
            "https://errata.rockylinux.org/RLSA-2024:2724",
            "https://go.dev/cl/576155",
            "https://go.dev/issue/65051",
            "https://groups.google.com/g/golang-announce/c/YgW0sx8mN3M",
            "https://kb.cert.org/vuls/id/421644",
            "https://linux.oracle.com/cve/CVE-2023-45288.html",
            "https://linux.oracle.com/errata/ELSA-2024-3346.html",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QRYFHIQ6XRKRYBI2F5UESH67BJBQXUPT",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QRYFHIQ6XRKRYBI2F5UESH67BJBQXUPT/",
            "https://nowotarski.info/http2-continuation-flood-technical-details",
            "https://nowotarski.info/http2-continuation-flood/",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-45288",
            "https://pkg.go.dev/vuln/GO-2024-2687",
            "https://security.netapp.com/advisory/ntap-20240419-0009",
            "https://security.netapp.com/advisory/ntap-20240419-0009/",
            "https://ubuntu.com/security/notices/USN-6886-1",
            "https://ubuntu.com/security/notices/USN-7109-1",
            "https://ubuntu.com/security/notices/USN-7111-1",
            "https://www.cve.org/CVERecord?id=CVE-2023-45288",
            "https://www.kb.cert.org/vuls/id/421644"
          ],
          "PublishedDate": "2024-04-04T21:15:16.113Z",
          "LastModifiedDate": "2024-11-21T08:26:42.38Z"
        },
        {
          "VulnerabilityID": "CVE-2025-22870",
          "PkgID": "golang.org/x/net@v0.20.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.20.0",
            "UID": "8ead662c2e13b751"
          },
          "InstalledVersion": "v0.20.0",
          "FixedVersion": "0.36.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2025-22870",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/proxy: golang.org/x/net/http/httpproxy: HTTP Proxy bypass using IPv6 Zone IDs in golang.org/x/net",
          "Description": "Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to \"*.example.com\", a request to \"[::1%25.example.com]:80` will incorrectly match and not be proxied.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-115"
          ],
          "VendorSeverity": {
            "amazon": 2,
            "azure": 2,
            "cbl-mariner": 2,
            "ghsa": 2,
            "redhat": 2,
            "ubuntu": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L",
              "V3Score": 4.4
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L",
              "V3Score": 4.4
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2025/03/07/2",
            "https://access.redhat.com/security/cve/CVE-2025-22870",
            "https://github.com/golang/go/issues/71984",
            "https://go-review.googlesource.com/q/project:net",
            "https://go.dev/cl/654697",
            "https://go.dev/issue/71984",
            "https://groups.google.com/g/golang-announce/c/4t3lzH3I0eI/m/b42ImqrBAQAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2025-22870",
            "https://pkg.go.dev/vuln/GO-2025-3503",
            "https://security.netapp.com/advisory/ntap-20250509-0007",
            "https://security.netapp.com/advisory/ntap-20250509-0007/",
            "https://www.cve.org/CVERecord?id=CVE-2025-22870"
          ],
          "PublishedDate": "2025-03-12T19:15:38.31Z",
          "LastModifiedDate": "2025-05-09T20:15:38.727Z"
        },
        {
          "VulnerabilityID": "CVE-2025-22872",
          "PkgID": "golang.org/x/net@v0.20.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.20.0",
            "UID": "8ead662c2e13b751"
          },
          "InstalledVersion": "v0.20.0",
          "FixedVersion": "0.38.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2025-22872",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Incorrect Neutralization of Input During Web Page Generation in x/net in golang.org/x/net",
          "Description": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. \u003cmath\u003e, \u003csvg\u003e, etc contexts).",
          "Severity": "MEDIUM",
          "VendorSeverity": {
            "amazon": 3,
            "azure": 2,
            "cbl-mariner": 2,
            "ghsa": 2,
            "redhat": 2
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:L",
              "V3Score": 6.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2025-22872",
            "https://github.com/advisories/GHSA-vvgc-356p-c3xw",
            "https://go.dev/cl/662715",
            "https://go.dev/issue/73070",
            "https://groups.google.com/g/golang-announce/c/ezSKR9vqbqA",
            "https://nvd.nist.gov/vuln/detail/CVE-2025-22872",
            "https://pkg.go.dev/vuln/GO-2025-3595",
            "https://security.netapp.com/advisory/ntap-20250516-0007",
            "https://security.netapp.com/advisory/ntap-20250516-0007/",
            "https://www.cve.org/CVERecord?id=CVE-2025-22872"
          ],
          "PublishedDate": "2025-04-16T18:16:04.183Z",
          "LastModifiedDate": "2025-05-16T23:15:19.707Z"
        }
      ]
    }
  ]
}
